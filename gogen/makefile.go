package gogen

import (
	"fmt"
	"os"
	"strings"

	"github.com/nickwells/param.mod/v4/param"
	"github.com/nickwells/param.mod/v4/param/phelp"
)

// MakeFileOrDie creates the file truncating it if it already exists and
// returning the open file. If an error is detected, it is reported and the
// program exits
func MakeFileOrDie(filename string) *os.File {
	f, err := os.Create(filename)
	if err != nil {
		fmt.Fprint(os.Stderr, err)
		os.Exit(1)
	}
	return f
}

// PrintPreamble prints the package name and the introductory comments for
// the file to be generated.
func PrintPreamble(f *os.File, ps *param.PSet) {
	fmt.Fprintln(f, "package", GetPackage())

	fmt.Fprint(f, `
/*
This code was generated by `+ps.ProgBaseName()+`
with parameters set at:
`)
	for _, pg := range ps.GetGroups() {
		if strings.HasPrefix(pg.Name, phelp.CommonParamsGroupNamePrefix()) {
			continue
		}

		for _, p := range pg.Params {
			whereSet := p.WhereSet()
			if len(whereSet) > 0 {
				fmt.Fprintln(f, "\t"+whereSet[len(whereSet)-1])
			}
		}
	}
	fmt.Fprint(f, `

DO NOT EDIT
*/

`)
}
